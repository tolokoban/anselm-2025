"use strict";(self.webpackChunkansy_2025=self.webpackChunkansy_2025||[]).push([[948],{866:(e,n,o)=>{function t(e){return Array.isArray(e)?e[Math.floor(Math.random()*e.length)]:e}o.d(n,{U:()=>t})},1163:(e,n,o)=>{o.d(n,{A:()=>a});var t=o(1354),s=o.n(t),r=o(6314),i=o.n(r)()(s());i.push([e.id,'.src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  gap: 0.5em;\n  align-items: center;\n}\n\n.src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa > button {\n    position: relative;\n  border: inherit;\n  font: inherit;\n  background: none;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  width: 2em;\n  height: 2em;\n  cursor: pointer;\n}\n\n.src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa > button::after {\n    content: "";\n    transition: all 0.2s;\n    opacity: 0;\n    position: absolute;\n    left: 0;\n    bottom: -.5em;\n    width: 100%;\n    height: .2em;\n    border-radius: 99vmax;\n    background-color: #fff;\n    box-shadow: 0 0 .2em #000;\n }\n\n  .src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa > button.src-components-LanguageSelector-LanguageSelector-module_current_m0PJ6q::after {\n    opacity: 1;\n  }\n    \n.src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa > button > img {\n  width: 2em;\n  height: 2em;\n  margin: 0;\n}\n',"",{version:3,sources:["webpack://./src/components/LanguageSelector/LanguageSelector.module.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,mBAAmB;EACnB,2BAA2B;EAC3B,UAAU;EACV,mBAAmB;AACrB;;AAEA;IACI,kBAAkB;EACpB,eAAe;EACf,aAAa;EACb,gBAAgB;EAChB,eAAe;EACf,UAAU;EACV,SAAS;EACT,UAAU;EACV,WAAW;EACX,eAAe;AACjB;;AAEA;IACI,WAAW;IACX,oBAAoB;IACpB,UAAU;IACV,kBAAkB;IAClB,OAAO;IACP,aAAa;IACb,WAAW;IACX,YAAY;IACZ,qBAAqB;IACrB,sBAAsB;IACtB,yBAAyB;CAC5B;;EAEC;IACE,UAAU;EACZ;;AAEF;EACE,UAAU;EACV,WAAW;EACX,SAAS;AACX",sourcesContent:['.languageselector {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  gap: 0.5em;\n  align-items: center;\n}\n\n.languageselector > button {\n    position: relative;\n  border: inherit;\n  font: inherit;\n  background: none;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  width: 2em;\n  height: 2em;\n  cursor: pointer;\n}\n\n.languageselector > button::after {\n    content: "";\n    transition: all 0.2s;\n    opacity: 0;\n    position: absolute;\n    left: 0;\n    bottom: -.5em;\n    width: 100%;\n    height: .2em;\n    border-radius: 99vmax;\n    background-color: #fff;\n    box-shadow: 0 0 .2em #000;\n }\n\n  .languageselector > button.current::after {\n    opacity: 1;\n  }\n    \n.languageselector > button > img {\n  width: 2em;\n  height: 2em;\n  margin: 0;\n}\n'],sourceRoot:""}]),i.locals={languageselector:"src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa",current:"src-components-LanguageSelector-LanguageSelector-module_current_m0PJ6q"};const a=i},4333:(e,n,o)=>{o.d(n,{A:()=>a});var t=o(1354),s=o.n(t),r=o(6314),i=o.n(r)()(s());i.push([e.id,".src-components-ViewText-ViewText-module_viewText_vqZsDv {\n    display: grid;\n    place-items: center;\n    padding: 0.5em;\n}\n\n.src-components-ViewText-ViewText-module_viewText_vqZsDv > div {\n    text-align: left;\n}\n\n.src-components-ViewText-ViewText-module_viewText_vqZsDv > div > p {\n    margin: 0;\n    text-align: justify;\n    line-height: 1;\n    -webkit-text-stroke: 0.05em #000;\n}\n\n.src-components-ViewText-ViewText-module_viewText_vqZsDv > div > p > div {\n    display: inline-block;\n    margin-right: 0.5em;\n}\n\n.src-components-ViewText-ViewText-module_viewText_vqZsDv > div > p > div > span {\n    display: inline-block;\n    transition: all 1s;\n    opacity: 0;\n    transform: translateY(100%) scale(0);\n}\n\n.src-components-ViewText-ViewText-module_viewText_vqZsDv > div > p > div > span.src-components-ViewText-ViewText-module_show_HhaPML {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n}\n","",{version:3,sources:["webpack://./src/components/ViewText/ViewText.module.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,cAAc;AAClB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,SAAS;IACT,mBAAmB;IACnB,cAAc;IACd,gCAAgC;AACpC;;AAEA;IACI,qBAAqB;IACrB,mBAAmB;AACvB;;AAEA;IACI,qBAAqB;IACrB,kBAAkB;IAClB,UAAU;IACV,oCAAoC;AACxC;;AAEA;IACI,UAAU;IACV,iCAAiC;AACrC",sourcesContent:[".viewText {\n    display: grid;\n    place-items: center;\n    padding: 0.5em;\n}\n\n.viewText > div {\n    text-align: left;\n}\n\n.viewText > div > p {\n    margin: 0;\n    text-align: justify;\n    line-height: 1;\n    -webkit-text-stroke: 0.05em #000;\n}\n\n.viewText > div > p > div {\n    display: inline-block;\n    margin-right: 0.5em;\n}\n\n.viewText > div > p > div > span {\n    display: inline-block;\n    transition: all 1s;\n    opacity: 0;\n    transform: translateY(100%) scale(0);\n}\n\n.viewText > div > p > div > span.show {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n}\n"],sourceRoot:""}]),i.locals={viewText:"src-components-ViewText-ViewText-module_viewText_vqZsDv",show:"src-components-ViewText-ViewText-module_show_HhaPML"};const a=i},4792:(e,n,o)=>{o.d(n,{A:()=>b});var t=o(4848),s=o(3708);const r=o.p+"img/en.b770486017d5f1f66633.png",i=o.p+"img/fr.e8048bd0a86ed0ffc41b.png",a=o.p+"img/alien.5805fb3aca154dd6b137.png";var A=o(5072),l=o.n(A),c=o(7825),u=o.n(c),d=o(7659),m=o.n(d),p=o(5056),g=o.n(p),v=o(540),B=o.n(v),C=o(1113),w=o.n(C),f=o(1163),h={};h.styleTagTransform=w(),h.setAttributes=g(),h.insert=m().bind(null,"head"),h.domAPI=u(),h.insertStyleElement=B(),l()(f.A,h);const I=f.A&&f.A.locals?f.A.locals:void 0,x={fr:i,en:r,alien:a};function b({className:e}){const[n,o]=(0,s.uU)();return(0,t.jsx)("div",{className:k(e,I.languageselector),children:["fr","en","alien"].map(e=>(0,t.jsx)("button",{className:k(n.startsWith(e)&&I.current),type:"button",onClick:()=>o(e),children:(0,t.jsx)("img",{src:x[e]})},e))})}function k(...e){return e.filter(e=>"string"==typeof e).join(" ")}},5005:(e,n,o)=>{o.d(n,{A:()=>a});var t=o(1354),s=o.n(t),r=o(6314),i=o.n(r)()(s());i.push([e.id,".src-components-ViewBook-ViewBook-module_viewBook_KUzI2B {\n    display: grid;\n    grid-template-rows: 1fr auto;\n    padding: 1em;\n    gap: 1em;\n    margin: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n}\n\n.src-components-ViewBook-ViewBook-module_viewBook_KUzI2B > footer {\n    display: flex;\n    flex-wrap: nowrap;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    gap: 1em;\n}\n\n.src-components-ViewBook-ViewBook-module_viewBook_KUzI2B > footer > button {\n    all: unset;\n    cursor: pointer;\n    border-radius: 50%;\n    background-color: var(--color-primary);\n    color: #000a;\n    width: 2em;\n    height: 2em;\n    display: grid;\n    place-items: center;\n    place-self: end;\n    transition: all 0.5s;\n    transform: scale(1);\n}\n\n.src-components-ViewBook-ViewBook-module_viewBook_KUzI2B > footer > button[disabled] {\n    transform: scale(0);\n}\n\n.src-components-ViewBook-ViewBook-module_viewBook_KUzI2B > footer > button > * {\n    width: 1.5em;\n    height: 1.5em;\n}","",{version:3,sources:["webpack://./src/components/ViewBook/ViewBook.module.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,4BAA4B;IAC5B,YAAY;IACZ,QAAQ;IACR,SAAS;IACT,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,iBAAiB;IACjB,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,QAAQ;AACZ;;AAEA;IACI,UAAU;IACV,eAAe;IACf,kBAAkB;IAClB,sCAAsC;IACtC,YAAY;IACZ,UAAU;IACV,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,eAAe;IACf,oBAAoB;IACpB,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,aAAa;AACjB",sourcesContent:[".viewBook {\n    display: grid;\n    grid-template-rows: 1fr auto;\n    padding: 1em;\n    gap: 1em;\n    margin: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n}\n\n.viewBook > footer {\n    display: flex;\n    flex-wrap: nowrap;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    gap: 1em;\n}\n\n.viewBook > footer > button {\n    all: unset;\n    cursor: pointer;\n    border-radius: 50%;\n    background-color: var(--color-primary);\n    color: #000a;\n    width: 2em;\n    height: 2em;\n    display: grid;\n    place-items: center;\n    place-self: end;\n    transition: all 0.5s;\n    transform: scale(1);\n}\n\n.viewBook > footer > button[disabled] {\n    transform: scale(0);\n}\n\n.viewBook > footer > button > * {\n    width: 1.5em;\n    height: 1.5em;\n}"],sourceRoot:""}]),i.locals={viewBook:"src-components-ViewBook-ViewBook-module_viewBook_KUzI2B"};const a=i},5006:(e,n,o)=>{o.d(n,{A:()=>T});var t=o(4848),s=o(6540),r=o(5072),i=o.n(r),a=o(7825),A=o.n(a),l=o(7659),c=o.n(l),u=o(5056),d=o.n(u),m=o(540),p=o.n(m),g=o(1113),v=o.n(g),B=o(5005),C={};C.styleTagTransform=v(),C.setAttributes=d(),C.insert=c().bind(null,"head"),C.domAPI=A(),C.insertStyleElement=p(),i()(B.A,C);const w=B.A&&B.A.locals?B.A.locals:void 0;var f=o(4333),h={};h.styleTagTransform=v(),h.setAttributes=d(),h.insert=c().bind(null,"head"),h.domAPI=A(),h.insertStyleElement=p(),i()(f.A,h);const I=f.A&&f.A.locals?f.A.locals:void 0;function x({className:e,children:n,onDone:o}){const r=s.useRef(0),i=s.useRef(0),[a,A]=s.useState([]),[l,c]=s.useState(0);return s.useEffect(()=>(r.current=0,c(0),A([]),window.setTimeout(()=>{A(function(e){let n=0;return e.split("\n").map(e=>e.trim().split(" ").map(e=>e.split("").map(e=>[e,n++])))}(n))}),window.clearTimeout(i.current),i.current=window.setInterval(()=>{if(r.current++,r.current>n.length)return window.clearTimeout(i.current),i.current=0,void(null==o||o());c(r.current)},20),()=>window.clearTimeout(i.current)),[n]),(0,t.jsx)("div",{className:b(e,I.viewText),children:(0,t.jsx)("div",{onClick:()=>{r.current=n.length,c(r.current),null==o||o()},children:a.map((e,o)=>(0,t.jsx)("p",{children:e.map((e,o)=>(0,t.jsx)("div",{children:e.map(([e,o])=>(0,t.jsx)("span",{className:b(o<l&&I.show),children:e},`${e}$#${o}/${n.length}`))},o))},o))})})}function b(...e){return e.filter(e=>"string"==typeof e).join(" ")}var k=o(866),y=o(7067),V=o(4792);function T({className:e,pages:n,onDone:o}){const[r,i]=s.useState(!0),[a,A]=s.useState(0),l=(0,k.U)(n[a]),c=a>=n.length-1;return(0,t.jsx)(y.A,{children:(0,t.jsxs)("div",{className:_(e,w.viewBook),children:[(0,t.jsx)(x,{onDone:()=>i(!1),children:null!=l?l:"..."}),(0,t.jsxs)("footer",{children:[(0,t.jsx)(V.A,{}),(0,t.jsx)("button",{type:"button",disabled:r,onClick:()=>{const e=a+1;e>=n.length?o():(i(!0),A(e),document.body.requestFullscreen())},children:c?(0,t.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor",children:[(0,t.jsx)("title",{children:"controller"}),(0,t.jsx)("path",{d:"M7.97,16L5,19C4.67,19.3 4.23,19.5 3.75,19.5A1.75,1.75 0 0,1 2,17.75V17.5L3,10.12C3.21,7.81 5.14,6 7.5,6H16.5C18.86,6 20.79,7.81 21,10.12L22,17.5V17.75A1.75,1.75 0 0,1 20.25,19.5C19.77,19.5 19.33,19.3 19,19L16.03,16H7.97M7,8V10H5V11H7V13H8V11H10V10H8V8H7M16.5,8A0.75,0.75 0 0,0 15.75,8.75A0.75,0.75 0 0,0 16.5,9.5A0.75,0.75 0 0,0 17.25,8.75A0.75,0.75 0 0,0 16.5,8M14.75,9.75A0.75,0.75 0 0,0 14,10.5A0.75,0.75 0 0,0 14.75,11.25A0.75,0.75 0 0,0 15.5,10.5A0.75,0.75 0 0,0 14.75,9.75M18.25,9.75A0.75,0.75 0 0,0 17.5,10.5A0.75,0.75 0 0,0 18.25,11.25A0.75,0.75 0 0,0 19,10.5A0.75,0.75 0 0,0 18.25,9.75M16.5,11.5A0.75,0.75 0 0,0 15.75,12.25A0.75,0.75 0 0,0 16.5,13A0.75,0.75 0 0,0 17.25,12.25A0.75,0.75 0 0,0 16.5,11.5Z"})]}):(0,t.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor",children:[(0,t.jsx)("title",{children:"dots-horizontal"}),(0,t.jsx)("path",{d:"M16,12A2,2 0 0,1 18,10A2,2 0 0,1 20,12A2,2 0 0,1 18,14A2,2 0 0,1 16,12M10,12A2,2 0 0,1 12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12M4,12A2,2 0 0,1 6,10A2,2 0 0,1 8,12A2,2 0 0,1 6,14A2,2 0 0,1 4,12Z"})]})})]})]})})}function _(...e){return e.filter(e=>"string"==typeof e).join(" ")}},7629:(e,n,o)=>{o.d(n,{m:()=>r});var t=o(3708),s=o(8577);function r(){return(0,t.L5)(s.A,{en:()=>o.e(130).then(o.bind(o,5130)),alien:()=>o.e(766).then(o.bind(o,5766))})}},8577:(e,n,o)=>{o.d(n,{A:()=>t});const t={dead1:"Vous avez perdu, Monsieur Anselm.\n    \nJe vous prie de vous concentrer un peu plus.",dead2:"Si vous perdez encore une fois, nous serons obligés de vous donner des conseils.",dead3:"Regardez comment joue votre adversaire.\nIl ne prend pas les pieces au hasard. Il le fait en fonction de ce que vous venez juste de faire.",dead4:"Quel nombre obtenez-vous quand vous additionnez le nombre de pièces que vous venez de prendre avec celui que l'aversaire prend juste après ?",dead5:"Pour gagner, l'adversaire fait en sorte que ce que vous prenez, plus ce qu'il prend fasse 4.\nSauf si vous parvenez à renverser la situation et à utiliser sa propre stratégie contre lui.",dead6:"Essayez de jouer avec 4 pièces.\nPuis avec 5, 6 ou 7.\nUne fois trouvé une stratégie, faites en sorte de vous retrouver dans une position gagnante.",help:"Chacun à notre tour, nous allons retourner 1, 2, ou 3 pieces.\n    \nCelui qui retourne les dernières a gagné,",intro1:"Monsieur Anselm,\nNe faites pas confiance aux aliens.\n\nChaque année, ils enlèvent des enfants terriens en leur servant le même mensonge.",intro2:"Nous somme le MIB.\nUne organisation secrète qui gère les relations inter-galactiques.\n\nNous aimerions vous recruter et vous confier une mission...",intro3:"Nous pensons que vous êtes un HSHPI et aimerions vous faire passer quelques tests.\n\n(HSHPI = Hyper Super Haut Potentiel Intellectuel)",win:["Bravo. Nous savions que vous réussiriez.","Vous avez passé ce test, Monsieur Anslem.","Monsieur Anslem, cette étape est réussie."],next:"Nous voudrions que vous soyiez un espion infiltré dans le monde des aliens.\n\nContinuez de faire tout ce qu'ils vous demandent.\nNous vous contacterons bientōt."}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,