"use strict";(self.webpackChunkansy_2025=self.webpackChunkansy_2025||[]).push([[813],{813:(n,e,t)=>{t.r(e),t.d(e,{default:()=>J});var o=t(4848),s=t(6540);const i=[[1,2,3,4],[],[]];function r(n){return 4===n[2].length}function a(n){return n.map(n=>n.join("")).join("-")}const A=new Map;function c(n){const e=a(n),t=A.get(e);if(t)return t;const o=new Promise(n=>{const t=new Image,o=`assets/04/images/${e}`,s=`${o}.webp`,i=`${o}.small.webp`;t.srcset=`${s} 1920w, ${i} 960w`,t.sizes="(width > 960px) 1920px, (height > 960px) 1920px, 96px",t.alt=e,t.onload=()=>{n(t)},t.onerror=()=>{console.error("Unable to load image:",t.srcset),n(t)}});return A.set(e,o),o}function l(){const[n,e]=s.useState(i),[t,o]=s.useState(null);return s.useEffect(()=>{c(n).then(o)},[n]),[n,e,t]}var u=t(5072),p=t.n(u),d=t(7825),m=t.n(d),h=t(7659),C=t.n(h),g=t(5056),B=t.n(g),v=t(540),f=t.n(v),y=t(1113),b=t.n(y),k=t(2052),I={};I.styleTagTransform=b(),I.setAttributes=B(),I.insert=C().bind(null,"head"),I.domAPI=m(),I.insertStyleElement=f(),p()(k.A,I);const w=k.A&&k.A.locals?k.A.locals:void 0;var Q=t(1594),_={};_.styleTagTransform=b(),_.setAttributes=B(),_.insert=C().bind(null,"head"),_.domAPI=m(),_.insertStyleElement=f(),p()(Q.A,_);const x=Q.A&&Q.A.locals?Q.A.locals:void 0;function S({className:n,games:e,onSelectGame:t}){return(0,o.jsx)("div",{className:j(n,x.selectTo),children:e.map(n=>(0,o.jsx)(E,{game:n,onClick:()=>t(n)},a(n)))})}function j(...n){return n.filter(n=>"string"==typeof n).join(" ")}function E({game:n,onClick:e}){const[t,i]=s.useState(null);return s.useEffect(()=>{i(null),c(n).then(n=>i(n.currentSrc))},[n]),(0,o.jsx)("button",{type:"button",style:{backgroundImage:`url(${t})`,opacity:t?1:0},onClick:e})}var T=t(2523),M=t(8866),W={};W.styleTagTransform=b(),W.setAttributes=B(),W.insert=C().bind(null,"head"),W.domAPI=m(),W.insertStyleElement=f(),p()(M.A,W);const V=M.A&&M.A.locals?M.A.locals:void 0;var Y=t(9419);function z({className:n,game:e}){const t=(0,T.m)();return(0,o.jsx)("button",{type:"button",disabled:!r(e),className:N(n,V.victory,r(e)&&V.show),onClick:(0,Y.ig)("/04/win"),children:(0,o.jsx)("div",{children:(0,o.jsx)("div",{children:t.victory()})})})}function N(...n){return n.filter(n=>"string"==typeof n).join(" ")}var O=t(6907),P=t(9846),X={};X.styleTagTransform=b(),X.setAttributes=B(),X.insert=C().bind(null,"head"),X.domAPI=m(),X.insertStyleElement=f(),p()(P.A,X);const q=P.A&&P.A.locals?P.A.locals:void 0,Z=[{opacity:0},{opacity:1}];function $({className:n,img1:e,img2:t}){const i=s.useRef(null),[r,a]=s.useState(!1);return s.useEffect(()=>{a(!!t)},[t]),s.useEffect(()=>{const n=i.current;n&&e&&n.animate(Z,{duration:400})},[e]),(0,o.jsxs)("div",{className:R(n,q.scene),children:[(0,o.jsx)("div",{style:{backgroundImage:`url(${null==t?void 0:t.currentSrc})`,opacity:r?1:0}}),(0,o.jsx)("div",{ref:i,style:{backgroundImage:`url(${null==e?void 0:e.currentSrc})`,opacity:r?1:0}})]})}function R(...n){return n.filter(n=>"string"==typeof n).join(" ")}var U;function J(){const[n,e,t]=l(),[i,a,A]=l(),u=function(n){const e=s.useMemo(()=>function(n){const e=[0,1,2];return e.map(t=>e.map(e=>t===e?null:function(n,e,t){var o;const s=structuredClone(n);if(e===t)return s;const i=s[e].pop();return i?(null!==(o=s[t][s[t].length-1])&&void 0!==o?o:0)>=i?null:(s[t].push(i),s):null}(n,t,e)).filter(n=>!!n))}(n),[n]);return s.useEffect(()=>{e.forEach(n=>n.forEach(c))},[e]),e}(n),[p,d]=s.useState(!1);return s.useEffect(()=>{},[n]),t&&A?(0,o.jsxs)("div",{className:w.play,children:[(0,o.jsx)($,{img1:t,img2:A}),!r(n)&&(0,o.jsx)("header",{children:(0,o.jsx)(S,{games:[...u[0],...u[1],...u[2]],onSelectGame:t=>{a(n),e(t)}})}),(0,o.jsx)(z,{game:n})]}):(0,o.jsx)(O.A,{})}!function(n){n[n.SelectFrom=0]="SelectFrom",n[n.SelectTo=1]="SelectTo"}(U||(U={}))},1594:(n,e,t)=>{t.d(e,{A:()=>a});var o=t(1354),s=t.n(o),i=t(6314),r=t.n(i)()(s());r.push([n.id,'.src-app-04-play-_-SelectTo-SelectTo-module_selectTo_PVTxYl {\n    display: flex;\n    flex-wrap: nowrap;\n    flex-direction: row;\n    justify-content: space-around;\n    justify-content: space-evenly;\n    align-items: center;\n    gap: 8px;\n\n    > button {\n        content: "";\n        border: none;\n        display: block;\n        cursor: pointer;\n\n        width: 21vw;\n        height: 21vh;\n        border-radius: 7vh;\n        box-shadow: 0 5vh 10vh #000;\n        background-size: cover;\n        background-position: center;\n        transition: opacity 0.3s;\n    }\n}\n',"",{version:3,sources:["webpack://./src/app/04/play/_/SelectTo/SelectTo.module.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,iBAAiB;IACjB,mBAAmB;IACnB,6BAA6B;IAC7B,6BAA6B;IAC7B,mBAAmB;IACnB,QAAQ;;IAER;QACI,WAAW;QACX,YAAY;QACZ,cAAc;QACd,eAAe;;QAEf,WAAW;QACX,YAAY;QACZ,kBAAkB;QAClB,2BAA2B;QAC3B,sBAAsB;QACtB,2BAA2B;QAC3B,wBAAwB;IAC5B;AACJ",sourcesContent:['.selectTo {\n    display: flex;\n    flex-wrap: nowrap;\n    flex-direction: row;\n    justify-content: space-around;\n    justify-content: space-evenly;\n    align-items: center;\n    gap: 8px;\n\n    > button {\n        content: "";\n        border: none;\n        display: block;\n        cursor: pointer;\n\n        width: 21vw;\n        height: 21vh;\n        border-radius: 7vh;\n        box-shadow: 0 5vh 10vh #000;\n        background-size: cover;\n        background-position: center;\n        transition: opacity 0.3s;\n    }\n}\n'],sourceRoot:""}]),r.locals={selectTo:"src-app-04-play-_-SelectTo-SelectTo-module_selectTo_PVTxYl"};const a=r},2052:(n,e,t)=>{t.d(e,{A:()=>a});var o=t(1354),s=t.n(o),i=t(6314),r=t.n(i)()(s());r.push([n.id,".src-app-04-play-page-module_play_zN361K {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n\n    .src-app-04-play-page-module_background_ck1kBa {\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        background-size: cover;\n        background-image: var(--custom-url);\n        background-position: center;\n    }\n\n    > header {\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        padding: 5vmin;\n    }\n}\n","",{version:3,sources:["webpack://./src/app/04/play/page.module.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;;IAEZ;QACI,kBAAkB;QAClB,OAAO;QACP,MAAM;QACN,WAAW;QACX,YAAY;QACZ,sBAAsB;QACtB,mCAAmC;QACnC,2BAA2B;IAC/B;;IAEA;QACI,kBAAkB;QAClB,OAAO;QACP,MAAM;QACN,WAAW;QACX,cAAc;IAClB;AACJ",sourcesContent:[".play {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n\n    .background {\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        background-size: cover;\n        background-image: var(--custom-url);\n        background-position: center;\n    }\n\n    > header {\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        padding: 5vmin;\n    }\n}\n"],sourceRoot:""}]),r.locals={play:"src-app-04-play-page-module_play_zN361K",background:"src-app-04-play-page-module_background_ck1kBa"};const a=r},2523:(n,e,t)=>{t.d(e,{m:()=>i});var o=t(3708),s=t(7479);function i(){return(0,o.L5)(s.A,{en:()=>t.e(156).then(t.bind(t,1156)),alien:()=>t.e(348).then(t.bind(t,1348))})}},7479:(n,e,t)=>{t.d(e,{A:()=>o});const o={intro1:"Monsieur Anselm,\n    \n    Nous n'avons pas eu le temps de vous entrainer proprement avant cette mission.\n    Cependant, nos analyses montrent que vous n'avez peut-ētre pas le niveau intellectuel requis.",intro2:"Pour remédier à cela, nous vous avons préparé quelques exercices de renforcement cérébral.\n    Le premier s'appelle les Tours de Hanoi.\n    Chaque tour est composée d'un maximum de 4 disques. Et il est interdit de poser un disque sur un disque plus petit.",intro3:"Vous partez avec une tour sur l'emplacement de gauche et vous devez reconstruire la tour sur l'emplacement de droite.\n    Vous ne pouvez bouger qu'un disque à la fois.\n    \n    Bonne chance.",victory:"Victoire !",win:"Vous avez réussi ? C'est assez surprenant...\n    \n    Vous êtes donc apte à continuer votre mission Monsieur Anselm.\n    Mais votre entrainement n'est pas terminé."}},8866:(n,e,t)=>{t.d(e,{A:()=>a});var o=t(1354),s=t.n(o),i=t(6314),r=t.n(i)()(s());r.push([n.id,".src-app-04-play-_-Victory-Victory-module_victory_i99IDO {\n    all: inherit;\n\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    cursor: pointer;\n    pointer-events: none;\n    background-image: linear-gradient(to bottom, #000f, #0000, #0000);\n    opacity: 0;\n    transition: all 0.3s;\n\n    &.src-app-04-play-_-Victory-Victory-module_show_XMZdSo {\n        pointer-events: all;\n        opacity: 1;\n    }\n\n    > div {\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 33%;\n        display: grid;\n        place-items: center;\n        font-size: 10vh;\n        color: #fb9d5e;\n        -webkit-text-stroke: 2px #000;\n    }\n}\n","",{version:3,sources:["webpack://./src/app/04/play/_/Victory/Victory.module.css"],names:[],mappings:"AAAA;IACI,YAAY;;IAEZ,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,eAAe;IACf,oBAAoB;IACpB,iEAAiE;IACjE,UAAU;IACV,oBAAoB;;IAEpB;QACI,mBAAmB;QACnB,UAAU;IACd;;IAEA;QACI,kBAAkB;QAClB,OAAO;QACP,MAAM;QACN,WAAW;QACX,WAAW;QACX,aAAa;QACb,mBAAmB;QACnB,eAAe;QACf,cAAc;QACd,6BAA6B;IACjC;AACJ",sourcesContent:[".victory {\n    all: inherit;\n\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    cursor: pointer;\n    pointer-events: none;\n    background-image: linear-gradient(to bottom, #000f, #0000, #0000);\n    opacity: 0;\n    transition: all 0.3s;\n\n    &.show {\n        pointer-events: all;\n        opacity: 1;\n    }\n\n    > div {\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 33%;\n        display: grid;\n        place-items: center;\n        font-size: 10vh;\n        color: #fb9d5e;\n        -webkit-text-stroke: 2px #000;\n    }\n}\n"],sourceRoot:""}]),r.locals={victory:"src-app-04-play-_-Victory-Victory-module_victory_i99IDO",show:"src-app-04-play-_-Victory-Victory-module_show_XMZdSo"};const a=r},9846:(n,e,t)=>{t.d(e,{A:()=>a});var o=t(1354),s=t.n(o),i=t(6314),r=t.n(i)()(s());r.push([n.id,".src-app-04-play-_-Scene-Scene-module_scene__My4i4 {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background: #000;\n\n    > div {\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        background-position: center;\n        background-size: cover;\n        transition: opacity 1s;\n    }\n}\n","",{version:3,sources:["webpack://./src/app/04/play/_/Scene/Scene.module.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,gBAAgB;;IAEhB;QACI,kBAAkB;QAClB,OAAO;QACP,MAAM;QACN,WAAW;QACX,YAAY;QACZ,2BAA2B;QAC3B,sBAAsB;QACtB,sBAAsB;IAC1B;AACJ",sourcesContent:[".scene {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background: #000;\n\n    > div {\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        background-position: center;\n        background-size: cover;\n        transition: opacity 1s;\n    }\n}\n"],sourceRoot:""}]),r.locals={scene:"src-app-04-play-_-Scene-Scene-module_scene__My4i4"};const a=r}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,