"use strict";(self.webpackChunk_=self.webpackChunk_||[]).push([[313],{5:(e,n,t)=>{t.d(n,{A:()=>a});var o=t(354),s=t.n(o),i=t(314),r=t.n(i)()(s());r.push([e.id,".src-components-ViewBook-ViewBook-module_viewBook_KUzI2B {\n    display: grid;\n    grid-template-rows: 1fr auto;\n    padding: 1em;\n    gap: 1em;\n    margin: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n}\n\n.src-components-ViewBook-ViewBook-module_viewBook_KUzI2B > button {\n    place-self: end;\n    transition: all 0.5s;\n    transform: scale(1);\n}\n\n.src-components-ViewBook-ViewBook-module_viewBook_KUzI2B > button[disabled] {\n    transform: scale(0);\n}\n","",{version:3,sources:["webpack://./src/components/ViewBook/ViewBook.module.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,4BAA4B;IAC5B,YAAY;IACZ,QAAQ;IACR,SAAS;IACT,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,oBAAoB;IACpB,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB",sourcesContent:[".viewBook {\n    display: grid;\n    grid-template-rows: 1fr auto;\n    padding: 1em;\n    gap: 1em;\n    margin: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n}\n\n.viewBook > button {\n    place-self: end;\n    transition: all 0.5s;\n    transform: scale(1);\n}\n\n.viewBook > button[disabled] {\n    transform: scale(0);\n}\n"],sourceRoot:""}]),r.locals={viewBook:"src-components-ViewBook-ViewBook-module_viewBook_KUzI2B"};const a=r},333:(e,n,t)=>{t.d(n,{A:()=>a});var o=t(354),s=t.n(o),i=t(314),r=t.n(i)()(s());r.push([e.id,".src-components-ViewText-ViewText-module_viewText_vqZsDv {\n    display: grid;\n    place-items: center;\n}\n\n.src-components-ViewText-ViewText-module_viewText_vqZsDv > div {\n    text-align: left;\n    white-space: pre-wrap;\n}\n\n.src-components-ViewText-ViewText-module_viewText_vqZsDv > div > span {\n    transition: opacity 1.5s;\n    opacity: 0;\n}\n\n.src-components-ViewText-ViewText-module_viewText_vqZsDv > div > span.src-components-ViewText-ViewText-module_show_HhaPML {\n    opacity: 1;\n}\n","",{version:3,sources:["webpack://./src/components/ViewText/ViewText.module.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,qBAAqB;AACzB;;AAEA;IACI,wBAAwB;IACxB,UAAU;AACd;;AAEA;IACI,UAAU;AACd",sourcesContent:[".viewText {\n    display: grid;\n    place-items: center;\n}\n\n.viewText > div {\n    text-align: left;\n    white-space: pre-wrap;\n}\n\n.viewText > div > span {\n    transition: opacity 1.5s;\n    opacity: 0;\n}\n\n.viewText > div > span.show {\n    opacity: 1;\n}\n"],sourceRoot:""}]),r.locals={viewText:"src-components-ViewText-ViewText-module_viewText_vqZsDv",show:"src-components-ViewText-ViewText-module_show_HhaPML"};const a=r},313:(e,n,t)=>{t.r(n),t.d(n,{default:()=>A});var o=t(848),s=t(69),i=t(829),r=t(992),a=t(470);function A(){var e;const n=null!=(e=window.sessionStorage.getItem("score"))?e:"0";return(0,o.jsx)(s.A,{onDone:(0,i.ig)("/play"),pages:[`${(0,r.U)(["Tu t'es crashé en beauté !","Tu as brouté les marguerites !","La gravité t'a rattrappé !","T'as fait bobo à mon vaisseau !","Oh ! Ça doit faire mal ça !","T'es sūr d'avoir to permis ?","On va dire qu'on n'a rien vu...","Hey ! Tu sais combien ça coūte une soucoupe ?","Tu as rayé la peinture là !","Rapelle-moi de ne jamais monter avec toi dans un vaisseau..."])}\n\nNombre de ${(0,r.U)(a.W)} ${(0,r.U)(a.l)} : ${n}`]})}},69:(e,n,t)=>{t.d(n,{A:()=>V});var o=t(848),s=t(540),i=t(72),r=t.n(i),a=t(825),A=t.n(a),l=t(659),c=t.n(l),u=t(56),d=t.n(u),w=t(159),m=t.n(w),p=t(113),v=t.n(p),h=t(5),B={};B.styleTagTransform=v(),B.setAttributes=d(),B.insert=c().bind(null,"head"),B.domAPI=A(),B.insertStyleElement=m(),r()(h.A,B);const x=h.A&&h.A.locals?h.A.locals:void 0;var g=t(333),T={};T.styleTagTransform=v(),T.setAttributes=d(),T.insert=c().bind(null,"head"),T.domAPI=A(),T.insertStyleElement=m(),r()(g.A,T);const C=g.A&&g.A.locals?g.A.locals:void 0;function f({className:e,children:n,onDone:t}){const i=s.useRef(0),r=s.useRef(0),[a,A]=s.useState([]),[l,c]=s.useState(0);return s.useEffect((()=>(i.current=0,c(0),A([]),window.setTimeout((()=>{A(n.split(""))}),300),window.clearTimeout(r.current),r.current=window.setInterval((()=>{if(i.current++,i.current>n.length)return window.clearTimeout(r.current),r.current=0,void t();c(i.current)}),40),()=>window.clearTimeout(r.current))),[n]),(0,o.jsx)("div",{className:I(e,C.viewText),children:(0,o.jsx)("div",{onClick:()=>{i.current=n.length,c(i.current),t()},children:a.map(((e,t)=>(0,o.jsx)("span",{className:I(t<l&&C.show),children:e},`${e}$#${t}/${n.length}`)))})})}function I(...e){return e.filter((e=>"string"==typeof e)).join(" ")}var b=t(992);function V({className:e,pages:n,onDone:t}){const[i,r]=s.useState(!0),[a,A]=s.useState(0),l=(0,b.U)(n[a]),c=a>=n.length-1;return(0,o.jsxs)("div",{className:k(e,x.viewBook),children:[(0,o.jsx)(f,{onDone:()=>r(!1),children:null!=l?l:"..."}),(0,o.jsx)("button",{type:"button",disabled:i,onClick:()=>{const e=a+1;e>=n.length?t():(r(!0),A(e))},children:c?(0,o.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor",children:[(0,o.jsx)("title",{children:"controller"}),(0,o.jsx)("path",{d:"M7.97,16L5,19C4.67,19.3 4.23,19.5 3.75,19.5A1.75,1.75 0 0,1 2,17.75V17.5L3,10.12C3.21,7.81 5.14,6 7.5,6H16.5C18.86,6 20.79,7.81 21,10.12L22,17.5V17.75A1.75,1.75 0 0,1 20.25,19.5C19.77,19.5 19.33,19.3 19,19L16.03,16H7.97M7,8V10H5V11H7V13H8V11H10V10H8V8H7M16.5,8A0.75,0.75 0 0,0 15.75,8.75A0.75,0.75 0 0,0 16.5,9.5A0.75,0.75 0 0,0 17.25,8.75A0.75,0.75 0 0,0 16.5,8M14.75,9.75A0.75,0.75 0 0,0 14,10.5A0.75,0.75 0 0,0 14.75,11.25A0.75,0.75 0 0,0 15.5,10.5A0.75,0.75 0 0,0 14.75,9.75M18.25,9.75A0.75,0.75 0 0,0 17.5,10.5A0.75,0.75 0 0,0 18.25,11.25A0.75,0.75 0 0,0 19,10.5A0.75,0.75 0 0,0 18.25,9.75M16.5,11.5A0.75,0.75 0 0,0 15.75,12.25A0.75,0.75 0 0,0 16.5,13A0.75,0.75 0 0,0 17.25,12.25A0.75,0.75 0 0,0 16.5,11.5Z"})]}):(0,o.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor",children:[(0,o.jsx)("title",{children:"dots-horizontal"}),(0,o.jsx)("path",{d:"M16,12A2,2 0 0,1 18,10A2,2 0 0,1 20,12A2,2 0 0,1 18,14A2,2 0 0,1 16,12M10,12A2,2 0 0,1 12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12M4,12A2,2 0 0,1 6,10A2,2 0 0,1 8,12A2,2 0 0,1 6,14A2,2 0 0,1 4,12Z"})]})})]})}function k(...e){return e.filter((e=>"string"==typeof e)).join(" ")}},470:(e,n,t)=>{t.d(n,{W:()=>o,l:()=>s});const o=["vache","vache","vache","vache","bestiole","laitière","meuh-meuh"],s=["absorbée","attrapée","avalée","capturée","dépecée","désintégrée","digérée","emprisonnée","engloutie","liquidée","mangée","pulvérisée"]},992:(e,n,t)=>{function o(e){return Array.isArray(e)?e[Math.floor(Math.random()*e.length)]:e}t.d(n,{U:()=>o})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,