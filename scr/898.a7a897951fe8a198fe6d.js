"use strict";(self.webpackChunkansy_2025=self.webpackChunkansy_2025||[]).push([[898],{150:(e,n,t)=>{t.d(n,{A:()=>o});const o={intro1:"Tu es le meilleur Anselm!\n\nLa soucoupe est maintenant pleine de carburant et on va pouvoir aller sur la Lune chercher un vaisseau plus puissant pour sortir du système solaire.",intro2:"Pour rester discrēts, on l'a cachée dans un canyon.\n    \n    Il va falloir faire preuve d'un peu d'adresse pour naviguer là-dedans.",start:"C'est parti !"}},866:(e,n,t)=>{function o(e){return Array.isArray(e)?e[Math.floor(Math.random()*e.length)]:e}t.d(n,{U:()=>o})},1163:(e,n,t)=>{t.d(n,{A:()=>a});var o=t(1354),r=t.n(o),s=t(6314),A=t.n(s)()(r());A.push([e.id,'.src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  gap: 0.5em;\n  align-items: center;\n}\n\n.src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa > button {\n    position: relative;\n  border: inherit;\n  font: inherit;\n  background: none;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  width: 2em;\n  height: 2em;\n  cursor: pointer;\n}\n\n.src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa > button::after {\n    content: "";\n    transition: all 0.2s;\n    opacity: 0;\n    position: absolute;\n    left: 0;\n    bottom: -.5em;\n    width: 100%;\n    height: .2em;\n    border-radius: 99vmax;\n    background-color: #fff;\n    box-shadow: 0 0 .2em #000;\n }\n\n  .src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa > button.src-components-LanguageSelector-LanguageSelector-module_current_m0PJ6q::after {\n    opacity: 1;\n  }\n    \n.src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa > button > img {\n  width: 2em;\n  height: 2em;\n  margin: 0;\n}\n',"",{version:3,sources:["webpack://./src/components/LanguageSelector/LanguageSelector.module.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,mBAAmB;EACnB,2BAA2B;EAC3B,UAAU;EACV,mBAAmB;AACrB;;AAEA;IACI,kBAAkB;EACpB,eAAe;EACf,aAAa;EACb,gBAAgB;EAChB,eAAe;EACf,UAAU;EACV,SAAS;EACT,UAAU;EACV,WAAW;EACX,eAAe;AACjB;;AAEA;IACI,WAAW;IACX,oBAAoB;IACpB,UAAU;IACV,kBAAkB;IAClB,OAAO;IACP,aAAa;IACb,WAAW;IACX,YAAY;IACZ,qBAAqB;IACrB,sBAAsB;IACtB,yBAAyB;CAC5B;;EAEC;IACE,UAAU;EACZ;;AAEF;EACE,UAAU;EACV,WAAW;EACX,SAAS;AACX",sourcesContent:['.languageselector {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  gap: 0.5em;\n  align-items: center;\n}\n\n.languageselector > button {\n    position: relative;\n  border: inherit;\n  font: inherit;\n  background: none;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  width: 2em;\n  height: 2em;\n  cursor: pointer;\n}\n\n.languageselector > button::after {\n    content: "";\n    transition: all 0.2s;\n    opacity: 0;\n    position: absolute;\n    left: 0;\n    bottom: -.5em;\n    width: 100%;\n    height: .2em;\n    border-radius: 99vmax;\n    background-color: #fff;\n    box-shadow: 0 0 .2em #000;\n }\n\n  .languageselector > button.current::after {\n    opacity: 1;\n  }\n    \n.languageselector > button > img {\n  width: 2em;\n  height: 2em;\n  margin: 0;\n}\n'],sourceRoot:""}]),A.locals={languageselector:"src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa",current:"src-components-LanguageSelector-LanguageSelector-module_current_m0PJ6q"};const a=A},2848:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var o=t(4848),r=t(9419),s=t(5006),A=t(8616),a=t(7450);function i(){const e=(0,A.m)();return a.a.ep01.highscore,(0,o.jsx)(s.A,{pages:[e.intro1(),e.intro2()],onDone:()=>{(0,r.gQ)("/01/play"),document.body.requestFullscreen()}})}},4333:(e,n,t)=>{t.d(n,{A:()=>a});var o=t(1354),r=t.n(o),s=t(6314),A=t.n(s)()(r());A.push([e.id,".src-components-ViewText-ViewText-module_viewText_vqZsDv {\n    display: grid;\n    place-items: center;\n}\n\n.src-components-ViewText-ViewText-module_viewText_vqZsDv > div {\n    text-align: left;\n    white-space: pre-wrap;\n}\n\n.src-components-ViewText-ViewText-module_viewText_vqZsDv > div > span {\n    transition: opacity 1.5s;\n    opacity: 0;\n}\n\n.src-components-ViewText-ViewText-module_viewText_vqZsDv > div > span.src-components-ViewText-ViewText-module_show_HhaPML {\n    opacity: 1;\n}\n","",{version:3,sources:["webpack://./src/components/ViewText/ViewText.module.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,qBAAqB;AACzB;;AAEA;IACI,wBAAwB;IACxB,UAAU;AACd;;AAEA;IACI,UAAU;AACd",sourcesContent:[".viewText {\n    display: grid;\n    place-items: center;\n}\n\n.viewText > div {\n    text-align: left;\n    white-space: pre-wrap;\n}\n\n.viewText > div > span {\n    transition: opacity 1.5s;\n    opacity: 0;\n}\n\n.viewText > div > span.show {\n    opacity: 1;\n}\n"],sourceRoot:""}]),A.locals={viewText:"src-components-ViewText-ViewText-module_viewText_vqZsDv",show:"src-components-ViewText-ViewText-module_show_HhaPML"};const a=A},4792:(e,n,t)=>{t.d(n,{A:()=>x});var o=t(4848),r=t(3708);const s=t.p+"img/en.b770486017d5f1f66633.png",A=t.p+"img/fr.e8048bd0a86ed0ffc41b.png",a=t.p+"img/alien.5805fb3aca154dd6b137.png";var i=t(5072),l=t.n(i),c=t(7825),u=t.n(c),d=t(7659),m=t.n(d),g=t(5056),p=t.n(g),w=t(540),B=t.n(w),f=t(1113),C=t.n(f),h=t(1163),b={};b.styleTagTransform=C(),b.setAttributes=p(),b.insert=m().bind(null,"head"),b.domAPI=u(),b.insertStyleElement=B(),l()(h.A,b);const v=h.A&&h.A.locals?h.A.locals:void 0,I={fr:A,en:s,alien:a};function x({className:e}){const[n,t]=(0,r.uU)();return(0,o.jsx)("div",{className:y(e,v.languageselector),children:["fr","en","alien"].map((e=>(0,o.jsx)("button",{className:y(n.startsWith(e)&&v.current),type:"button",onClick:()=>t(e),children:(0,o.jsx)("img",{src:I[e]})},e)))})}function y(...e){return e.filter((e=>"string"==typeof e)).join(" ")}},5005:(e,n,t)=>{t.d(n,{A:()=>a});var o=t(1354),r=t.n(o),s=t(6314),A=t.n(s)()(r());A.push([e.id,".src-components-ViewBook-ViewBook-module_viewBook_KUzI2B {\n    display: grid;\n    grid-template-rows: 1fr auto;\n    padding: 1em;\n    gap: 1em;\n    margin: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n}\n\n.src-components-ViewBook-ViewBook-module_viewBook_KUzI2B > footer {\n    display: flex;\n    flex-wrap: nowrap;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    gap: 1em;\n}\n\n.src-components-ViewBook-ViewBook-module_viewBook_KUzI2B > footer > button {\n    all: unset;\n    cursor: pointer;\n    border-radius: 50%;\n    background-color: var(--color-primary);\n    color: #000a;\n    width: 2em;\n    height: 2em;\n    display: grid;\n    place-items: center;\n    place-self: end;\n    transition: all 0.5s;\n    transform: scale(1);\n}\n\n.src-components-ViewBook-ViewBook-module_viewBook_KUzI2B > footer > button[disabled] {\n    transform: scale(0);\n}\n\n.src-components-ViewBook-ViewBook-module_viewBook_KUzI2B > footer > button > * {\n    width: 1.5em;\n    height: 1.5em;\n}","",{version:3,sources:["webpack://./src/components/ViewBook/ViewBook.module.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,4BAA4B;IAC5B,YAAY;IACZ,QAAQ;IACR,SAAS;IACT,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,iBAAiB;IACjB,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,QAAQ;AACZ;;AAEA;IACI,UAAU;IACV,eAAe;IACf,kBAAkB;IAClB,sCAAsC;IACtC,YAAY;IACZ,UAAU;IACV,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,eAAe;IACf,oBAAoB;IACpB,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,aAAa;AACjB",sourcesContent:[".viewBook {\n    display: grid;\n    grid-template-rows: 1fr auto;\n    padding: 1em;\n    gap: 1em;\n    margin: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n}\n\n.viewBook > footer {\n    display: flex;\n    flex-wrap: nowrap;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    gap: 1em;\n}\n\n.viewBook > footer > button {\n    all: unset;\n    cursor: pointer;\n    border-radius: 50%;\n    background-color: var(--color-primary);\n    color: #000a;\n    width: 2em;\n    height: 2em;\n    display: grid;\n    place-items: center;\n    place-self: end;\n    transition: all 0.5s;\n    transform: scale(1);\n}\n\n.viewBook > footer > button[disabled] {\n    transform: scale(0);\n}\n\n.viewBook > footer > button > * {\n    width: 1.5em;\n    height: 1.5em;\n}"],sourceRoot:""}]),A.locals={viewBook:"src-components-ViewBook-ViewBook-module_viewBook_KUzI2B"};const a=A},5006:(e,n,t)=>{t.d(n,{A:()=>_});var o=t(4848),r=t(6540),s=t(5072),A=t.n(s),a=t(7825),i=t.n(a),l=t(7659),c=t.n(l),u=t(5056),d=t.n(u),m=t(540),g=t.n(m),p=t(1113),w=t.n(p),B=t(5005),f={};f.styleTagTransform=w(),f.setAttributes=d(),f.insert=c().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=g(),A()(B.A,f);const C=B.A&&B.A.locals?B.A.locals:void 0;var h=t(4333),b={};b.styleTagTransform=w(),b.setAttributes=d(),b.insert=c().bind(null,"head"),b.domAPI=i(),b.insertStyleElement=g(),A()(h.A,b);const v=h.A&&h.A.locals?h.A.locals:void 0;function I({className:e,children:n,onDone:t}){const s=r.useRef(0),A=r.useRef(0),[a,i]=r.useState([]),[l,c]=r.useState(0);return r.useEffect((()=>(s.current=0,c(0),i([]),window.setTimeout((()=>{i(n.split(""))})),window.clearTimeout(A.current),A.current=window.setInterval((()=>{if(s.current++,s.current>n.length)return window.clearTimeout(A.current),A.current=0,void(null==t||t());c(s.current)}),40),()=>window.clearTimeout(A.current))),[n]),(0,o.jsx)("div",{className:x(e,v.viewText),children:(0,o.jsx)("div",{onClick:()=>{s.current=n.length,c(s.current),null==t||t()},children:a.map(((e,t)=>(0,o.jsx)("span",{className:x(t<l&&v.show),children:e},`${e}$#${t}/${n.length}`)))})})}function x(...e){return e.filter((e=>"string"==typeof e)).join(" ")}var y=t(866),k=t(7067),V=t(4792);function _({className:e,pages:n,onDone:t}){const[s,A]=r.useState(!0),[a,i]=r.useState(0),l=(0,y.U)(n[a]),c=a>=n.length-1;return(0,o.jsx)(k.A,{children:(0,o.jsxs)("div",{className:E(e,C.viewBook),children:[(0,o.jsx)(I,{onDone:()=>A(!1),children:null!=l?l:"..."}),(0,o.jsxs)("footer",{children:[(0,o.jsx)(V.A,{}),(0,o.jsx)("button",{type:"button",disabled:s,onClick:()=>{const e=a+1;e>=n.length?t():(A(!0),i(e),document.body.requestFullscreen())},children:c?(0,o.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor",children:[(0,o.jsx)("title",{children:"controller"}),(0,o.jsx)("path",{d:"M7.97,16L5,19C4.67,19.3 4.23,19.5 3.75,19.5A1.75,1.75 0 0,1 2,17.75V17.5L3,10.12C3.21,7.81 5.14,6 7.5,6H16.5C18.86,6 20.79,7.81 21,10.12L22,17.5V17.75A1.75,1.75 0 0,1 20.25,19.5C19.77,19.5 19.33,19.3 19,19L16.03,16H7.97M7,8V10H5V11H7V13H8V11H10V10H8V8H7M16.5,8A0.75,0.75 0 0,0 15.75,8.75A0.75,0.75 0 0,0 16.5,9.5A0.75,0.75 0 0,0 17.25,8.75A0.75,0.75 0 0,0 16.5,8M14.75,9.75A0.75,0.75 0 0,0 14,10.5A0.75,0.75 0 0,0 14.75,11.25A0.75,0.75 0 0,0 15.5,10.5A0.75,0.75 0 0,0 14.75,9.75M18.25,9.75A0.75,0.75 0 0,0 17.5,10.5A0.75,0.75 0 0,0 18.25,11.25A0.75,0.75 0 0,0 19,10.5A0.75,0.75 0 0,0 18.25,9.75M16.5,11.5A0.75,0.75 0 0,0 15.75,12.25A0.75,0.75 0 0,0 16.5,13A0.75,0.75 0 0,0 17.25,12.25A0.75,0.75 0 0,0 16.5,11.5Z"})]}):(0,o.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor",children:[(0,o.jsx)("title",{children:"dots-horizontal"}),(0,o.jsx)("path",{d:"M16,12A2,2 0 0,1 18,10A2,2 0 0,1 20,12A2,2 0 0,1 18,14A2,2 0 0,1 16,12M10,12A2,2 0 0,1 12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12M4,12A2,2 0 0,1 6,10A2,2 0 0,1 8,12A2,2 0 0,1 6,14A2,2 0 0,1 4,12Z"})]})})]})]})})}function E(...e){return e.filter((e=>"string"==typeof e)).join(" ")}},7450:(e,n,t)=>{t.d(n,{a:()=>o});const o={ep01:r(1,{highscore:0,total:0}),ep02:r(2,{losses:0})};function r(e,n){const t=n=>localStorage.getItem(`Ansy-2025/${e}/${n}`),o=(n,t)=>localStorage.setItem(`Ansy-2025/${e}/${n}`,t),r={$reset(){}};for(const e of Object.keys(n)){const s=n[e];"string"==typeof s?Object.defineProperty(r,e,{configurable:!1,enumerable:!0,get:()=>{const n=t(e);return"string"==typeof n?n:s},set:n=>{o(e,n)}}):Object.defineProperty(r,e,{configurable:!1,enumerable:!0,get:()=>{const n=Number(t(e));return Number.isNaN(n)?s:n},set:n=>{o(e,`${n}`)}})}return r.$reset=()=>{for(const e of Object.keys(n)){const t=n[e];r[e]=t}},r}},8616:(e,n,t)=>{t.d(n,{m:()=>s});var o=t(3708),r=t(150);function s(){return(0,o.L5)(r.A,{en:()=>t.e(325).then(t.bind(t,9325)),alien:()=>t.e(747).then(t.bind(t,747))})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,