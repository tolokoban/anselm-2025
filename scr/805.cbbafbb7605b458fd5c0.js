"use strict";(self.webpackChunkansy_2025=self.webpackChunkansy_2025||[]).push([[805],{866:(e,n,t)=>{function o(e){return Array.isArray(e)?e[Math.floor(Math.random()*e.length)]:e}t.d(n,{U:()=>o})},1154:(e,n,t)=>{t.d(n,{m:()=>s});var o=t(3708),r=t(7144);function s(){return(0,o.L5)(r.A,{en:()=>t.e(91).then(t.bind(t,3091)),alien:()=>t.e(861).then(t.bind(t,2861))})}},1163:(e,n,t)=>{t.d(n,{A:()=>i});var o=t(1354),r=t.n(o),s=t(6314),a=t.n(s)()(r());a.push([e.id,'.src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  gap: 0.5em;\n  align-items: center;\n}\n\n.src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa > button {\n    position: relative;\n  border: inherit;\n  font: inherit;\n  background: none;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  width: 2em;\n  height: 2em;\n  cursor: pointer;\n}\n\n.src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa > button::after {\n    content: "";\n    transition: all 0.2s;\n    opacity: 0;\n    position: absolute;\n    left: 0;\n    bottom: -.5em;\n    width: 100%;\n    height: .2em;\n    border-radius: 99vmax;\n    background-color: #fff;\n    box-shadow: 0 0 .2em #000;\n }\n\n  .src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa > button.src-components-LanguageSelector-LanguageSelector-module_current_m0PJ6q::after {\n    opacity: 1;\n  }\n    \n.src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa > button > img {\n  width: 2em;\n  height: 2em;\n  margin: 0;\n}\n',"",{version:3,sources:["webpack://./src/components/LanguageSelector/LanguageSelector.module.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,mBAAmB;EACnB,2BAA2B;EAC3B,UAAU;EACV,mBAAmB;AACrB;;AAEA;IACI,kBAAkB;EACpB,eAAe;EACf,aAAa;EACb,gBAAgB;EAChB,eAAe;EACf,UAAU;EACV,SAAS;EACT,UAAU;EACV,WAAW;EACX,eAAe;AACjB;;AAEA;IACI,WAAW;IACX,oBAAoB;IACpB,UAAU;IACV,kBAAkB;IAClB,OAAO;IACP,aAAa;IACb,WAAW;IACX,YAAY;IACZ,qBAAqB;IACrB,sBAAsB;IACtB,yBAAyB;CAC5B;;EAEC;IACE,UAAU;EACZ;;AAEF;EACE,UAAU;EACV,WAAW;EACX,SAAS;AACX",sourcesContent:['.languageselector {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  gap: 0.5em;\n  align-items: center;\n}\n\n.languageselector > button {\n    position: relative;\n  border: inherit;\n  font: inherit;\n  background: none;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  width: 2em;\n  height: 2em;\n  cursor: pointer;\n}\n\n.languageselector > button::after {\n    content: "";\n    transition: all 0.2s;\n    opacity: 0;\n    position: absolute;\n    left: 0;\n    bottom: -.5em;\n    width: 100%;\n    height: .2em;\n    border-radius: 99vmax;\n    background-color: #fff;\n    box-shadow: 0 0 .2em #000;\n }\n\n  .languageselector > button.current::after {\n    opacity: 1;\n  }\n    \n.languageselector > button > img {\n  width: 2em;\n  height: 2em;\n  margin: 0;\n}\n'],sourceRoot:""}]),a.locals={languageselector:"src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa",current:"src-components-LanguageSelector-LanguageSelector-module_current_m0PJ6q"};const i=a},1784:(e,n,t)=>{t.d(n,{q:()=>r});var o=t(7450);const r={get ep02(){return o.a.ep01.total>=30}}},4333:(e,n,t)=>{t.d(n,{A:()=>i});var o=t(1354),r=t.n(o),s=t(6314),a=t.n(s)()(r());a.push([e.id,".src-components-ViewText-ViewText-module_viewText_vqZsDv {\n    display: grid;\n    place-items: center;\n}\n\n.src-components-ViewText-ViewText-module_viewText_vqZsDv > div {\n    text-align: left;\n    white-space: pre-wrap;\n}\n\n.src-components-ViewText-ViewText-module_viewText_vqZsDv > div > span {\n    display: inline-block;\n    transition: all 1s;\n    opacity: 0;\n    transform: translateY(100%) scale(0);\n}\n\n.src-components-ViewText-ViewText-module_viewText_vqZsDv > div > span.src-components-ViewText-ViewText-module_show_HhaPML {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n}\n","",{version:3,sources:["webpack://./src/components/ViewText/ViewText.module.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,qBAAqB;AACzB;;AAEA;IACI,qBAAqB;IACrB,kBAAkB;IAClB,UAAU;IACV,oCAAoC;AACxC;;AAEA;IACI,UAAU;IACV,iCAAiC;AACrC",sourcesContent:[".viewText {\n    display: grid;\n    place-items: center;\n}\n\n.viewText > div {\n    text-align: left;\n    white-space: pre-wrap;\n}\n\n.viewText > div > span {\n    display: inline-block;\n    transition: all 1s;\n    opacity: 0;\n    transform: translateY(100%) scale(0);\n}\n\n.viewText > div > span.show {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n}\n"],sourceRoot:""}]),a.locals={viewText:"src-components-ViewText-ViewText-module_viewText_vqZsDv",show:"src-components-ViewText-ViewText-module_show_HhaPML"};const i=a},4543:(e,n,t)=>{t.r(n),t.d(n,{default:()=>c});var o=t(4848),r=t(5006),s=t(9419),a=t(1154),i=t(7450),A=t(1784);function c(){var e;const n=(0,a.m)(),t=Number(null!==(e=window.sessionStorage.getItem("score"))&&void 0!==e?e:"0"),c=i.a.ep01.highscore;return(0,o.jsx)(r.A,{onDone:()=>{i.a.ep01.highscore=t,i.a.ep01.total+=t,(0,s.gQ)(A.q.ep02?"/02":"/01/play")},pages:[`${n.gameOver()}\n\n${n.score(n.scoreCows(),n.scoreEats())} : ${t}\n\n${t>c?n.congrats():n.highscore(`${c}`)}`]})}},4792:(e,n,t)=>{t.d(n,{A:()=>I});var o=t(4848),r=t(3708);const s=t.p+"img/en.b770486017d5f1f66633.png",a=t.p+"img/fr.e8048bd0a86ed0ffc41b.png",i=t.p+"img/alien.5805fb3aca154dd6b137.png";var A=t(5072),c=t.n(A),l=t(7825),u=t.n(l),m=t(7659),d=t.n(m),g=t(5056),p=t.n(g),h=t(540),B=t.n(h),w=t(1113),f=t.n(w),C=t(1163),v={};v.styleTagTransform=f(),v.setAttributes=p(),v.insert=d().bind(null,"head"),v.domAPI=u(),v.insertStyleElement=B(),c()(C.A,v);const b=C.A&&C.A.locals?C.A.locals:void 0,x={fr:a,en:s,alien:i};function I({className:e}){const[n,t]=(0,r.uU)();return(0,o.jsx)("div",{className:y(e,b.languageselector),children:["fr","en","alien"].map((e=>(0,o.jsx)("button",{className:y(n.startsWith(e)&&b.current),type:"button",onClick:()=>t(e),children:(0,o.jsx)("img",{src:x[e]})},e)))})}function y(...e){return e.filter((e=>"string"==typeof e)).join(" ")}},5005:(e,n,t)=>{t.d(n,{A:()=>i});var o=t(1354),r=t.n(o),s=t(6314),a=t.n(s)()(r());a.push([e.id,".src-components-ViewBook-ViewBook-module_viewBook_KUzI2B {\n    display: grid;\n    grid-template-rows: 1fr auto;\n    padding: 1em;\n    gap: 1em;\n    margin: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n}\n\n.src-components-ViewBook-ViewBook-module_viewBook_KUzI2B > footer {\n    display: flex;\n    flex-wrap: nowrap;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    gap: 1em;\n}\n\n.src-components-ViewBook-ViewBook-module_viewBook_KUzI2B > footer > button {\n    all: unset;\n    cursor: pointer;\n    border-radius: 50%;\n    background-color: var(--color-primary);\n    color: #000a;\n    width: 2em;\n    height: 2em;\n    display: grid;\n    place-items: center;\n    place-self: end;\n    transition: all 0.5s;\n    transform: scale(1);\n}\n\n.src-components-ViewBook-ViewBook-module_viewBook_KUzI2B > footer > button[disabled] {\n    transform: scale(0);\n}\n\n.src-components-ViewBook-ViewBook-module_viewBook_KUzI2B > footer > button > * {\n    width: 1.5em;\n    height: 1.5em;\n}","",{version:3,sources:["webpack://./src/components/ViewBook/ViewBook.module.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,4BAA4B;IAC5B,YAAY;IACZ,QAAQ;IACR,SAAS;IACT,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,iBAAiB;IACjB,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,QAAQ;AACZ;;AAEA;IACI,UAAU;IACV,eAAe;IACf,kBAAkB;IAClB,sCAAsC;IACtC,YAAY;IACZ,UAAU;IACV,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,eAAe;IACf,oBAAoB;IACpB,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,aAAa;AACjB",sourcesContent:[".viewBook {\n    display: grid;\n    grid-template-rows: 1fr auto;\n    padding: 1em;\n    gap: 1em;\n    margin: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n}\n\n.viewBook > footer {\n    display: flex;\n    flex-wrap: nowrap;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    gap: 1em;\n}\n\n.viewBook > footer > button {\n    all: unset;\n    cursor: pointer;\n    border-radius: 50%;\n    background-color: var(--color-primary);\n    color: #000a;\n    width: 2em;\n    height: 2em;\n    display: grid;\n    place-items: center;\n    place-self: end;\n    transition: all 0.5s;\n    transform: scale(1);\n}\n\n.viewBook > footer > button[disabled] {\n    transform: scale(0);\n}\n\n.viewBook > footer > button > * {\n    width: 1.5em;\n    height: 1.5em;\n}"],sourceRoot:""}]),a.locals={viewBook:"src-components-ViewBook-ViewBook-module_viewBook_KUzI2B"};const i=a},5006:(e,n,t)=>{t.d(n,{A:()=>E});var o=t(4848),r=t(6540),s=t(5072),a=t.n(s),i=t(7825),A=t.n(i),c=t(7659),l=t.n(c),u=t(5056),m=t.n(u),d=t(540),g=t.n(d),p=t(1113),h=t.n(p),B=t(5005),w={};w.styleTagTransform=h(),w.setAttributes=m(),w.insert=l().bind(null,"head"),w.domAPI=A(),w.insertStyleElement=g(),a()(B.A,w);const f=B.A&&B.A.locals?B.A.locals:void 0;var C=t(4333),v={};v.styleTagTransform=h(),v.setAttributes=m(),v.insert=l().bind(null,"head"),v.domAPI=A(),v.insertStyleElement=g(),a()(C.A,v);const b=C.A&&C.A.locals?C.A.locals:void 0;function x({className:e,children:n,onDone:t}){const s=r.useRef(0),a=r.useRef(0),[i,A]=r.useState([]),[c,l]=r.useState(0);return r.useEffect((()=>(s.current=0,l(0),A([]),window.setTimeout((()=>{A(n.split(""))})),window.clearTimeout(a.current),a.current=window.setInterval((()=>{if(s.current++,s.current>n.length)return window.clearTimeout(a.current),a.current=0,void(null==t||t());l(s.current)}),20),()=>window.clearTimeout(a.current))),[n]),(0,o.jsx)("div",{className:I(e,b.viewText),children:(0,o.jsx)("div",{onClick:()=>{s.current=n.length,l(s.current),null==t||t()},children:i.map(((e,t)=>"\n"===e?(0,o.jsx)("br",{}):(0,o.jsx)("span",{className:I(t<c&&b.show),children:e},`${e}$#${t}/${n.length}`)))})})}function I(...e){return e.filter((e=>"string"==typeof e)).join(" ")}var y=t(866),k=t(7067),T=t(4792);function E({className:e,pages:n,onDone:t}){const[s,a]=r.useState(!0),[i,A]=r.useState(0),c=(0,y.U)(n[i]),l=i>=n.length-1;return(0,o.jsx)(k.A,{children:(0,o.jsxs)("div",{className:V(e,f.viewBook),children:[(0,o.jsx)(x,{onDone:()=>a(!1),children:null!=c?c:"..."}),(0,o.jsxs)("footer",{children:[(0,o.jsx)(T.A,{}),(0,o.jsx)("button",{type:"button",disabled:s,onClick:()=>{const e=i+1;e>=n.length?t():(a(!0),A(e),document.body.requestFullscreen())},children:l?(0,o.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor",children:[(0,o.jsx)("title",{children:"controller"}),(0,o.jsx)("path",{d:"M7.97,16L5,19C4.67,19.3 4.23,19.5 3.75,19.5A1.75,1.75 0 0,1 2,17.75V17.5L3,10.12C3.21,7.81 5.14,6 7.5,6H16.5C18.86,6 20.79,7.81 21,10.12L22,17.5V17.75A1.75,1.75 0 0,1 20.25,19.5C19.77,19.5 19.33,19.3 19,19L16.03,16H7.97M7,8V10H5V11H7V13H8V11H10V10H8V8H7M16.5,8A0.75,0.75 0 0,0 15.75,8.75A0.75,0.75 0 0,0 16.5,9.5A0.75,0.75 0 0,0 17.25,8.75A0.75,0.75 0 0,0 16.5,8M14.75,9.75A0.75,0.75 0 0,0 14,10.5A0.75,0.75 0 0,0 14.75,11.25A0.75,0.75 0 0,0 15.5,10.5A0.75,0.75 0 0,0 14.75,9.75M18.25,9.75A0.75,0.75 0 0,0 17.5,10.5A0.75,0.75 0 0,0 18.25,11.25A0.75,0.75 0 0,0 19,10.5A0.75,0.75 0 0,0 18.25,9.75M16.5,11.5A0.75,0.75 0 0,0 15.75,12.25A0.75,0.75 0 0,0 16.5,13A0.75,0.75 0 0,0 17.25,12.25A0.75,0.75 0 0,0 16.5,11.5Z"})]}):(0,o.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor",children:[(0,o.jsx)("title",{children:"dots-horizontal"}),(0,o.jsx)("path",{d:"M16,12A2,2 0 0,1 18,10A2,2 0 0,1 20,12A2,2 0 0,1 18,14A2,2 0 0,1 16,12M10,12A2,2 0 0,1 12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12M4,12A2,2 0 0,1 6,10A2,2 0 0,1 8,12A2,2 0 0,1 6,14A2,2 0 0,1 4,12Z"})]})})]})]})})}function V(...e){return e.filter((e=>"string"==typeof e)).join(" ")}},7144:(e,n,t)=>{t.d(n,{A:()=>o});const o={congrats:["C'est un nouveau record !!!","Ancien record pulvérisé !!!","Tu progresses ! Bravo !!!","Eh hop ! Nouveau record !!!","Tu progresses trop bien !!!","Tu as encore fait mieux !!!","Tu te dépasses Anselm !!!","De mieux en mieux Ansy !!!"],gameOver:["Ouch... Tu t'es bien explosé, là !","Tu t'es crashé en beauté !","Tu as brouté les marguerites !","La gravité t'a rattrappé !","T'as fait bobo à mon vaisseau !","Oh ! Ça doit faire mal ça !","T'es sūr d'avoir ton permis ?","On va dire qu'on n'a rien vu...","Hey ! Tu sais combien ça coūte une soucoupe ?","Tu as rayé la peinture là !","Rapelle-moi de ne jamais monter avec toi dans un vaisseau...","Tu as heurté le plancher des vaches !","Boum ! Dans ta face !","Alors c'est mon garagiste qui va être content..."],intro1:"Cher Anselm,\nTu viens d'avoir 9 ans et tu es à mi-chemin de la majorité.\n          \nDu moins... d'après les critères Terrestres.",intro2:"Mais tu dois t'en douter maintenant :\ntu ne viens pas vraiment de la Terre...\n\nEt il est grand temps que tu rentres chez toi.",intro3:"On t'a laissé une soucoupe, mais elle n'a pas encore assez d'énergie pour faire le voyage à travers la galaxie.",intro4:"Pour faire le plein, clique sur l'écran ou appuie sur la barre d'espace.\nUne centaine de bovins devrait faire l'affaire.\n\n$1",highscore:["Record à battre : $1.","Précédent record : $1","Pourras-tu battre $1 ?","Tu as déjà réussi $1.","Meilleur score : $1."],score:"$1 $2",scoreCow:["vache","vache","vache","vache","bestiole","laitière","meuh-meuh","Marguerite","bête"],scoreCows:["vaches","vaches","vaches","vaches","bestioles","laitières","meuhs-meuhs","Marguerites","bêtes"],scoreEat:["absorbée","aspirée","attrapée","avalée","capturée","déchiquetée","dépecée","désintégrée","digérée","écorchée","emprisonnée","engloutie","liquidée","mangée","pulvérisée"],scoreEats:["absorbées","aspirées","attrapées","avalées","capturées","déchiquetées","dépecées","désintégrées","digérées","écorchées","emprisonnées","englouties","liquidées","mangées","pulvérisées"],seeYou:"À très bientôt ANSELM !!!"}},7450:(e,n,t)=>{t.d(n,{a:()=>o});const o={ep01:r(1,{highscore:0,total:0}),ep02:r(2,{losses:0})};function r(e,n){const t=n=>localStorage.getItem(`Ansy-2025/${e}/${n}`),o=(n,t)=>localStorage.setItem(`Ansy-2025/${e}/${n}`,t),r={$reset(){}};for(const e of Object.keys(n)){const s=n[e];"string"==typeof s?Object.defineProperty(r,e,{configurable:!1,enumerable:!0,get:()=>{const n=t(e);return"string"==typeof n?n:s},set:n=>{o(e,n)}}):Object.defineProperty(r,e,{configurable:!1,enumerable:!0,get:()=>{const n=Number(t(e));return Number.isNaN(n)?s:n},set:n=>{o(e,`${n}`)}})}return r.$reset=()=>{for(const e of Object.keys(n)){const t=n[e];r[e]=t}},r}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,