"use strict";(self.webpackChunkansy_2025=self.webpackChunkansy_2025||[]).push([[527],{866:(e,n,t)=>{function o(e){return Array.isArray(e)?e[Math.floor(Math.random()*e.length)]:e}t.d(n,{U:()=>o})},1163:(e,n,t)=>{t.d(n,{A:()=>A});var o=t(1354),r=t.n(o),s=t(6314),i=t.n(s)()(r());i.push([e.id,'.src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  gap: 0.5em;\n  align-items: center;\n}\n\n.src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa > button {\n    position: relative;\n  border: inherit;\n  font: inherit;\n  background: none;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  width: 2em;\n  height: 2em;\n  cursor: pointer;\n}\n\n.src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa > button::after {\n    content: "";\n    transition: all 0.2s;\n    opacity: 0;\n    position: absolute;\n    left: 0;\n    bottom: -.5em;\n    width: 100%;\n    height: .2em;\n    border-radius: 99vmax;\n    background-color: #fff;\n    box-shadow: 0 0 .2em #000;\n }\n\n  .src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa > button.src-components-LanguageSelector-LanguageSelector-module_current_m0PJ6q::after {\n    opacity: 1;\n  }\n    \n.src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa > button > img {\n  width: 2em;\n  height: 2em;\n  margin: 0;\n}\n',"",{version:3,sources:["webpack://./src/components/LanguageSelector/LanguageSelector.module.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,mBAAmB;EACnB,2BAA2B;EAC3B,UAAU;EACV,mBAAmB;AACrB;;AAEA;IACI,kBAAkB;EACpB,eAAe;EACf,aAAa;EACb,gBAAgB;EAChB,eAAe;EACf,UAAU;EACV,SAAS;EACT,UAAU;EACV,WAAW;EACX,eAAe;AACjB;;AAEA;IACI,WAAW;IACX,oBAAoB;IACpB,UAAU;IACV,kBAAkB;IAClB,OAAO;IACP,aAAa;IACb,WAAW;IACX,YAAY;IACZ,qBAAqB;IACrB,sBAAsB;IACtB,yBAAyB;CAC5B;;EAEC;IACE,UAAU;EACZ;;AAEF;EACE,UAAU;EACV,WAAW;EACX,SAAS;AACX",sourcesContent:['.languageselector {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  gap: 0.5em;\n  align-items: center;\n}\n\n.languageselector > button {\n    position: relative;\n  border: inherit;\n  font: inherit;\n  background: none;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  width: 2em;\n  height: 2em;\n  cursor: pointer;\n}\n\n.languageselector > button::after {\n    content: "";\n    transition: all 0.2s;\n    opacity: 0;\n    position: absolute;\n    left: 0;\n    bottom: -.5em;\n    width: 100%;\n    height: .2em;\n    border-radius: 99vmax;\n    background-color: #fff;\n    box-shadow: 0 0 .2em #000;\n }\n\n  .languageselector > button.current::after {\n    opacity: 1;\n  }\n    \n.languageselector > button > img {\n  width: 2em;\n  height: 2em;\n  margin: 0;\n}\n'],sourceRoot:""}]),i.locals={languageselector:"src-components-LanguageSelector-LanguageSelector-module_languageselector_qy7Eqa",current:"src-components-LanguageSelector-LanguageSelector-module_current_m0PJ6q"};const A=i},2523:(e,n,t)=>{t.d(n,{m:()=>s});var o=t(3708),r=t(7479);function s(){return(0,o.L5)(r.A,{en:()=>t.e(156).then(t.bind(t,1156)),alien:()=>t.e(348).then(t.bind(t,1348))})}},3481:(e,n,t)=>{t.r(n),t.d(n,{default:()=>A});var o=t(4848),r=t(9419),s=t(5006),i=t(2523);function A(){const e=(0,i.m)();return(0,o.jsx)(s.A,{pages:[e.intro1(),e.intro2(),e.intro3()],onDone:()=>{(0,r.gQ)("/04/play"),document.body.requestFullscreen()}})}},4333:(e,n,t)=>{t.d(n,{A:()=>A});var o=t(1354),r=t.n(o),s=t(6314),i=t.n(s)()(r());i.push([e.id,".src-components-ViewText-ViewText-module_viewText_vqZsDv {\n    display: grid;\n    place-items: center;\n    padding: 0.5em;\n}\n\n.src-components-ViewText-ViewText-module_viewText_vqZsDv > div {\n    text-align: left;\n}\n\n.src-components-ViewText-ViewText-module_viewText_vqZsDv > div > p {\n    margin: 0;\n    text-align: justify;\n    line-height: 1;\n    -webkit-text-stroke: 0.05em #000;\n}\n\n.src-components-ViewText-ViewText-module_viewText_vqZsDv > div > p > div {\n    display: inline-block;\n    margin-right: 0.5em;\n}\n\n.src-components-ViewText-ViewText-module_viewText_vqZsDv > div > p > div > span {\n    display: inline-block;\n    transition: all 1s;\n    opacity: 0;\n    transform: translateY(100%) scale(0);\n}\n\n.src-components-ViewText-ViewText-module_viewText_vqZsDv > div > p > div > span.src-components-ViewText-ViewText-module_show_HhaPML {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n}\n","",{version:3,sources:["webpack://./src/components/ViewText/ViewText.module.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,cAAc;AAClB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,SAAS;IACT,mBAAmB;IACnB,cAAc;IACd,gCAAgC;AACpC;;AAEA;IACI,qBAAqB;IACrB,mBAAmB;AACvB;;AAEA;IACI,qBAAqB;IACrB,kBAAkB;IAClB,UAAU;IACV,oCAAoC;AACxC;;AAEA;IACI,UAAU;IACV,iCAAiC;AACrC",sourcesContent:[".viewText {\n    display: grid;\n    place-items: center;\n    padding: 0.5em;\n}\n\n.viewText > div {\n    text-align: left;\n}\n\n.viewText > div > p {\n    margin: 0;\n    text-align: justify;\n    line-height: 1;\n    -webkit-text-stroke: 0.05em #000;\n}\n\n.viewText > div > p > div {\n    display: inline-block;\n    margin-right: 0.5em;\n}\n\n.viewText > div > p > div > span {\n    display: inline-block;\n    transition: all 1s;\n    opacity: 0;\n    transform: translateY(100%) scale(0);\n}\n\n.viewText > div > p > div > span.show {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n}\n"],sourceRoot:""}]),i.locals={viewText:"src-components-ViewText-ViewText-module_viewText_vqZsDv",show:"src-components-ViewText-ViewText-module_show_HhaPML"};const A=i},4792:(e,n,t)=>{t.d(n,{A:()=>I});var o=t(4848),r=t(3708);const s=t.p+"img/en.b770486017d5f1f66633.png",i=t.p+"img/fr.e8048bd0a86ed0ffc41b.png",A=t.p+"img/alien.5805fb3aca154dd6b137.png";var a=t(5072),l=t.n(a),c=t(7825),u=t.n(c),m=t(7659),d=t.n(m),p=t(5056),g=t.n(p),B=t(540),C=t.n(B),w=t(1113),v=t.n(w),h=t(1163),f={};f.styleTagTransform=v(),f.setAttributes=g(),f.insert=d().bind(null,"head"),f.domAPI=u(),f.insertStyleElement=C(),l()(h.A,f);const x=h.A&&h.A.locals?h.A.locals:void 0,b={fr:i,en:s,alien:A};function I({className:e}){const[n,t]=(0,r.uU)();return(0,o.jsx)("div",{className:k(e,x.languageselector),children:["fr","en","alien"].map(e=>(0,o.jsx)("button",{className:k(n.startsWith(e)&&x.current),type:"button",onClick:()=>t(e),children:(0,o.jsx)("img",{src:b[e]})},e))})}function k(...e){return e.filter(e=>"string"==typeof e).join(" ")}},5005:(e,n,t)=>{t.d(n,{A:()=>A});var o=t(1354),r=t.n(o),s=t(6314),i=t.n(s)()(r());i.push([e.id,".src-components-ViewBook-ViewBook-module_viewBook_KUzI2B {\n    display: grid;\n    grid-template-rows: 1fr auto;\n    padding: 1em;\n    gap: 1em;\n    margin: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n}\n\n.src-components-ViewBook-ViewBook-module_viewBook_KUzI2B > footer {\n    display: flex;\n    flex-wrap: nowrap;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    gap: 1em;\n}\n\n.src-components-ViewBook-ViewBook-module_viewBook_KUzI2B > footer > button {\n    all: unset;\n    cursor: pointer;\n    border-radius: 50%;\n    background-color: var(--color-primary);\n    color: #000a;\n    width: 2em;\n    height: 2em;\n    display: grid;\n    place-items: center;\n    place-self: end;\n    transition: all 0.5s;\n    transform: scale(1);\n}\n\n.src-components-ViewBook-ViewBook-module_viewBook_KUzI2B > footer > button[disabled] {\n    transform: scale(0);\n}\n\n.src-components-ViewBook-ViewBook-module_viewBook_KUzI2B > footer > button > * {\n    width: 1.5em;\n    height: 1.5em;\n}","",{version:3,sources:["webpack://./src/components/ViewBook/ViewBook.module.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,4BAA4B;IAC5B,YAAY;IACZ,QAAQ;IACR,SAAS;IACT,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,iBAAiB;IACjB,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,QAAQ;AACZ;;AAEA;IACI,UAAU;IACV,eAAe;IACf,kBAAkB;IAClB,sCAAsC;IACtC,YAAY;IACZ,UAAU;IACV,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,eAAe;IACf,oBAAoB;IACpB,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,aAAa;AACjB",sourcesContent:[".viewBook {\n    display: grid;\n    grid-template-rows: 1fr auto;\n    padding: 1em;\n    gap: 1em;\n    margin: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n}\n\n.viewBook > footer {\n    display: flex;\n    flex-wrap: nowrap;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    gap: 1em;\n}\n\n.viewBook > footer > button {\n    all: unset;\n    cursor: pointer;\n    border-radius: 50%;\n    background-color: var(--color-primary);\n    color: #000a;\n    width: 2em;\n    height: 2em;\n    display: grid;\n    place-items: center;\n    place-self: end;\n    transition: all 0.5s;\n    transform: scale(1);\n}\n\n.viewBook > footer > button[disabled] {\n    transform: scale(0);\n}\n\n.viewBook > footer > button > * {\n    width: 1.5em;\n    height: 1.5em;\n}"],sourceRoot:""}]),i.locals={viewBook:"src-components-ViewBook-ViewBook-module_viewBook_KUzI2B"};const A=i},5006:(e,n,t)=>{t.d(n,{A:()=>T});var o=t(4848),r=t(6540),s=t(5072),i=t.n(s),A=t(7825),a=t.n(A),l=t(7659),c=t.n(l),u=t(5056),m=t.n(u),d=t(540),p=t.n(d),g=t(1113),B=t.n(g),C=t(5005),w={};w.styleTagTransform=B(),w.setAttributes=m(),w.insert=c().bind(null,"head"),w.domAPI=a(),w.insertStyleElement=p(),i()(C.A,w);const v=C.A&&C.A.locals?C.A.locals:void 0;var h=t(4333),f={};f.styleTagTransform=B(),f.setAttributes=m(),f.insert=c().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=p(),i()(h.A,f);const x=h.A&&h.A.locals?h.A.locals:void 0;function b({className:e,children:n,onDone:t}){const s=r.useRef(0),i=r.useRef(0),[A,a]=r.useState([]),[l,c]=r.useState(0);return r.useEffect(()=>(s.current=0,c(0),a([]),window.setTimeout(()=>{a(function(e){let n=0;return e.split("\n").map(e=>e.trim().split(" ").map(e=>e.split("").map(e=>[e,n++])))}(n))}),window.clearTimeout(i.current),i.current=window.setInterval(()=>{if(s.current++,s.current>n.length)return window.clearTimeout(i.current),i.current=0,void(null==t||t());c(s.current)},20),()=>window.clearTimeout(i.current)),[n]),(0,o.jsx)("div",{className:I(e,x.viewText),children:(0,o.jsx)("div",{onClick:()=>{s.current=n.length,c(s.current),null==t||t()},children:A.map((e,t)=>(0,o.jsx)("p",{children:e.map((e,t)=>(0,o.jsx)("div",{children:e.map(([e,t])=>(0,o.jsx)("span",{className:I(t<l&&x.show),children:e},`${e}$#${t}/${n.length}`))},t))},t))})})}function I(...e){return e.filter(e=>"string"==typeof e).join(" ")}var k=t(866),y=t(7067),V=t(4792);function T({className:e,pages:n,onDone:t}){const[s,i]=r.useState(!0),[A,a]=r.useState(0),l=(0,k.U)(n[A]),c=A>=n.length-1;return(0,o.jsx)(y.A,{children:(0,o.jsxs)("div",{className:_(e,v.viewBook),children:[(0,o.jsx)(b,{onDone:()=>i(!1),children:null!=l?l:"..."}),(0,o.jsxs)("footer",{children:[(0,o.jsx)(V.A,{}),(0,o.jsx)("button",{type:"button",disabled:s,onClick:()=>{const e=A+1;e>=n.length?t():(i(!0),a(e),document.body.requestFullscreen())},children:c?(0,o.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor",children:[(0,o.jsx)("title",{children:"controller"}),(0,o.jsx)("path",{d:"M7.97,16L5,19C4.67,19.3 4.23,19.5 3.75,19.5A1.75,1.75 0 0,1 2,17.75V17.5L3,10.12C3.21,7.81 5.14,6 7.5,6H16.5C18.86,6 20.79,7.81 21,10.12L22,17.5V17.75A1.75,1.75 0 0,1 20.25,19.5C19.77,19.5 19.33,19.3 19,19L16.03,16H7.97M7,8V10H5V11H7V13H8V11H10V10H8V8H7M16.5,8A0.75,0.75 0 0,0 15.75,8.75A0.75,0.75 0 0,0 16.5,9.5A0.75,0.75 0 0,0 17.25,8.75A0.75,0.75 0 0,0 16.5,8M14.75,9.75A0.75,0.75 0 0,0 14,10.5A0.75,0.75 0 0,0 14.75,11.25A0.75,0.75 0 0,0 15.5,10.5A0.75,0.75 0 0,0 14.75,9.75M18.25,9.75A0.75,0.75 0 0,0 17.5,10.5A0.75,0.75 0 0,0 18.25,11.25A0.75,0.75 0 0,0 19,10.5A0.75,0.75 0 0,0 18.25,9.75M16.5,11.5A0.75,0.75 0 0,0 15.75,12.25A0.75,0.75 0 0,0 16.5,13A0.75,0.75 0 0,0 17.25,12.25A0.75,0.75 0 0,0 16.5,11.5Z"})]}):(0,o.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor",children:[(0,o.jsx)("title",{children:"dots-horizontal"}),(0,o.jsx)("path",{d:"M16,12A2,2 0 0,1 18,10A2,2 0 0,1 20,12A2,2 0 0,1 18,14A2,2 0 0,1 16,12M10,12A2,2 0 0,1 12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12M4,12A2,2 0 0,1 6,10A2,2 0 0,1 8,12A2,2 0 0,1 6,14A2,2 0 0,1 4,12Z"})]})})]})]})})}function _(...e){return e.filter(e=>"string"==typeof e).join(" ")}},7479:(e,n,t)=>{t.d(n,{A:()=>o});const o={gotIt:"J'ai compris !",help:"Utilisez ces boutons pour déplacer les disques",helpButton:"Aide",intro1:"Monsieur Anselm,\n    \n    Nous n'avons pas eu le temps de vous entrainer proprement avant cette mission.\n    Cependant, nos analyses montrent que vous n'avez peut-ētre pas le niveau intellectuel requis.",intro2:"Pour remédier à cela, nous vous avons préparé quelques exercices de renforcement cérébral.\n    Le premier s'appelle les Tours de Hanoi.\n    Chaque tour est composée d'un maximum de 4 disques. Et il est interdit de poser un disque sur un disque plus petit.",intro3:"Vous partez avec une tour sur l'emplacement de gauche et vous devez reconstruire la tour sur l'emplacement de droite.\n    Vous ne pouvez bouger qu'un disque à la fois.\n    \n    Bonne chance.",victory:"Victoire !",win:"Vous avez réussi ? C'est assez surprenant...\n    \n    Vous êtes donc apte à continuer votre mission Monsieur Anselm.\n    Mais votre entrainement n'est pas terminé."}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,