"use strict";(self.webpackChunk_=self.webpackChunk_||[]).push([[543],{7144:(e,s,r)=>{r.d(s,{A:()=>a});const a={congrats:["C'est un nouveau record !!!","Ancien record pulvérisé !!!","Tu progresses ! Bravo !!!","Eh hop ! Nouveau record !!!","Tu progresses trop bien !!!","Tu as encore fait mieux !!!","Tu te dépasses Anselm !!!","De mieux en mieux Ansy !!!"],gameOver:["Ouch... Tu t'es bien explosé, là !","Tu t'es crashé en beauté !","Tu as brouté les marguerites !","La gravité t'a rattrappé !","T'as fait bobo à mon vaisseau !","Oh ! Ça doit faire mal ça !","T'es sūr d'avoir ton permis ?","On va dire qu'on n'a rien vu...","Hey ! Tu sais combien ça coūte une soucoupe ?","Tu as rayé la peinture là !","Rapelle-moi de ne jamais monter avec toi dans un vaisseau...","Tu as heurté le plancher des vaches !","Boum ! Dans ta face !","Alors c'est mon garagiste qui va être content..."],intro1:"Cher Anselm,\nTu viens d'avoir 9 ans et tu es à mi-chemin de la majorité.\n          \nDu moins... d'après les critères Terrestres.",intro2:"Mais tu dois t'en douter maintenant :\ntu ne viens pas vraiment de la Terre...\n\nEt il est grand temps que tu rentres chez toi.",intro3:"On t'a laissé une soucoupe, mais elle n'a pas encore assez d'énergie pour faire le voyage à travers la galaxie.",intro4:"Pour faire le plein, clique sur l'écran ou appuie sur la barre d'espace.\nUne centaine de bovins devrait faire l'affaire.\n\n$1",highscore:["Record à battre : $1.","Précédent record : $1","Pourras-tu battre $1 ?","Tu as déjà réussi $1.","Meilleur score : $1."],score:"$1 $2",scoreCow:["vache","vache","vache","vache","bestiole","laitière","meuh-meuh","Marguerite","bête"],scoreCows:["vaches","vaches","vaches","vaches","bestioles","laitières","meuhs-meuhs","Marguerites","bêtes"],scoreEat:["absorbée","aspirée","attrapée","avalée","capturée","déchiquetée","dépecée","désintégrée","digérée","écorchée","emprisonnée","engloutie","liquidée","mangée","pulvérisée"],scoreEats:["absorbées","aspirées","attrapées","avalées","capturées","déchiquetées","dépecées","désintégrées","digérées","écorchées","emprisonnées","englouties","liquidées","mangées","pulvérisées"],seeYou:"À très bientôt ANSELM !!!"}},1154:(e,s,r)=>{r.d(s,{m:()=>n});var a=r(3708),t=r(7144);function n(){return(0,a.L5)(t.A,{en:()=>r.e(91).then(r.bind(r,3091)),alien:()=>r.e(861).then(r.bind(r,2861))})}},4543:(e,s,r)=>{r.r(s),r.d(s,{default:()=>c});var a=r(4848),t=r(5006),n=r(9419),o=r(1154),i=r(7450),u=r(1784);function c(){var e;const s=(0,o.m)(),r=Number(null!==(e=window.sessionStorage.getItem("score"))&&void 0!==e?e:"0"),c=i.a.ep01.highscore;return(0,a.jsx)(t.A,{onDone:()=>{i.a.ep01.highscore=r,i.a.ep01.total+=r,(0,n.gQ)(u.q.ep02?"/02":"/01/play")},pages:[`${s.gameOver()}\n\n${s.score(s.scoreCows(),s.scoreEats())} : ${r}\n\n${r>c?s.congrats():s.highscore(`${c}`)}`]})}},7450:(e,s,r)=>{r.d(s,{a:()=>a});const a={ep01:function(e,s){const r=e=>localStorage.getItem(`Ansy-2025/1/${e}`),a=(e,s)=>localStorage.setItem(`Ansy-2025/1/${e}`,s),t={$reset(){}};for(const e of Object.keys(s)){const n=s[e];"string"==typeof n?Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:()=>{const s=r(e);return"string"==typeof s?s:n},set:s=>{a(e,s)}}):Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:()=>{const s=Number(r(e));return Number.isNaN(s)?n:s},set:s=>{a(e,`${s}`)}})}return t.$reset=()=>{for(const e of Object.keys(s)){const r=s[e];t[e]=r}},t}(0,{highscore:0,total:0})}},1784:(e,s,r)=>{r.d(s,{q:()=>t});var a=r(7450);const t={get ep02(){return a.a.ep01.total>=30}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,